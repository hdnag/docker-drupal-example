version: '3.0'

# We define containers here
services:

  # Container to run cli applications (composer, drush, drupal-console, etc.)
  php-cli:
    # Here, we use a Dockerfile and not a Docker Image. The file is Dockerfile-php-cli and is in the same repository
    # than the docker-compose.yml
    build:
      context: .
      dockerfile: Dockerfile-php-cli
      # Arguments pass to the Dockerfile.
      args:
        USER_UID: 1000
    volumes:
      # Data of application
      - .:/var/www/html:rw
      # Share the local user's composer cache and settings
      - ~/.composer:/home/php/.composer:rw
      # Share the local user's npm cache as a Docker volume
      - ~/.npm:/home/php/.npm:rw
      # Share the local user's SSH keys and configuration (read-only)
      - ~/.ssh:/home/php/.ssh:ro
      # Share the local user's known_host
      - ~/.ssh/known_hosts:/home/php/.ssh/known_hosts:rw
      # Share the local user's gitconfig
      - ~/.gitconfig:/home/php/.gitconfig
    environment:
      # We define the PATH and add the bin directory of vendor.
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/www/html/vendor/bin

  # php-fpm container used as PHP runtime for the web server
  php-fpm:
    image: drupaldocker/php-dev:7.0-fpm
    volumes:
      - .:/var/www/html:rw

  # The web server used to access the developement website
  web:
    image: nginx
    ports:
      - 80:80
    volumes:
      - .:/var/www/html:rw
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    # We create a link with the php service of php-fpm.
    links:
      - php-fpm:php
